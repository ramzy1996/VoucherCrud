// <auto-generated />
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210912092956_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("SubTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TotalDiscount")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Api.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaxAmount")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MinAmount")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PromotionAmount")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PromotionCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PromotionName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Api.Models.Voucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VoucherAmount")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VoucherId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Api.Models.Payment", b =>
                {
                    b.HasOne("Api.Models.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("Voucher");
                });
#pragma warning restore 612, 618
        }
    }
}
